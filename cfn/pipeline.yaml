AWSTemplateFormatVersion: 2010-09-09
Description: CI/CD pipeline for github projects

Parameters:
  Environment:
    Type: String

  Prefix:
    Type: String
  
  ShortName:
    Type: String

  LongName:
    Type: String

  Tag:
    Type: String

  GitHubOwner:
    Type: String
    AllowedPattern: '[A-Za-z0-9-]+'

  GitHubRepository:
    Type: String
   # AllowedPattern: '[A-Za-z0-9-]+'
    
  GitHubBranch:
    Type: String
    AllowedPattern: '[A-Za-z0-9-]+'

Resources:
  ArtifactBucket:
    Type: AWS::S3::Bucket

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub |
          version: 0.2
          phases:
            pre_build:
              commands:
                - echo Logging in to Amazon ECR...
                - $(aws ecr get-login --no-include-email)
                - TAG="${GitHubBranch}"_"$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)"
                - IMAGE_URI="${!REPOSITORY_URI}:${!TAG}"
            build:
              commands:
                - echo Build started on `date`
                - echo Building the Docker image...
                - docker build --tag "$IMAGE_URI" .
                - docker tag "$IMAGE_URI" "${!REPOSITORY_URI}:latest" 
            post_build:
              commands:
                - docker push "${!REPOSITORY_URI}:latest"
                - docker push "$IMAGE_URI"
                - printf '[{"name":"${LongName}","imageUri":"%s"}]' "$IMAGE_URI" >images.json
          artifacts:
            files: images.json
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/docker:17.09.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Value: !Ref AWS::Region
          - Name: REPOSITORY_URI
            Value: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${Tag}-docker/${LongName}
      Name: !Ref AWS::StackName
      ServiceRole: !Sub "${Prefix}-code-build-service-role"

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !Sub "arn:aws:iam::${AWS::AccountId}:role/${Prefix}-code-pipeline-service-role"
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: App
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepository
                Branch: !Ref GitHubBranch
                OAuthToken: >-
                  {{resolve:secretsmanager:GITHUB_ACCESS:SecretString:GITHUB_ACCESS_TOKEN}}
              OutputArtifacts:
                - Name: App
              RunOrder: 1
        
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuildProject
              InputArtifacts:
                - Name: App
              OutputArtifacts:
                - Name: BuildOutput
              RunOrder: 1
            - Name: Approval
              RunOrder: 2
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: '1'


        - Name: Deploy
          Actions:
            - Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: ECS
              Configuration:
                ClusterName: 
                  Fn::ImportValue: !Sub "${Prefix}-ecs-cluster"
                ServiceName: !Sub "${Prefix}-${LongName}-service"
                FileName: images.json
              InputArtifacts:
                - Name: BuildOutput
              RunOrder: 1

Outputs:

  PipelineUrl:
    Value: !Sub https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${Pipeline}